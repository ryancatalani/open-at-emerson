// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    var isOpen;
    $.getJSON("hours.json", function(json) {
      var arr, cat_div, loc_div, location, main, open, status_results, type, type_title, _i, _len, _ref, _results;
      main = $("#main");
      _ref = json.location_categories;
      _results = [];
      for (type in _ref) {
        arr = _ref[type];
        cat_div = $("<div></div>");
        cat_div.addClass("category");
        type_title = (type.split('_').map(function(word) {
          return word.charAt(0).toUpperCase() + word.slice(1);
        })).join(' ');
        $("<h3>" + type_title + "</h3>").appendTo(cat_div);
        for (_i = 0, _len = arr.length; _i < _len; _i++) {
          location = arr[_i];
          loc_div = $("<div></div>");
          loc_div.addClass('location');
          status_results = isOpen(location);
          open = status_results.open;
          if (open) {
            $("<div></div>").addClass('status').text('Open').appendTo(loc_div);
          } else {
            $("<div></div>").addClass('status').text('Closed').appendTo(loc_div);
          }
          $("<h4>" + location.name + "</h4>").appendTo(loc_div);
          if (status_results.notes != null) {
            $("<div></div>").addClass('notes').html(status_results.notes).appendTo(loc_div);
          }
          if (open) {
            loc_div.addClass('open');
          }
          loc_div.appendTo(cat_div);
        }
        _results.push(cat_div.appendTo(main));
      }
      return _results;
    });
    return isOpen = function(location) {
      var current_date, current_time, day, hours, inner_hours, inner_period, open, period, ret, sel, weekend, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      console.log(location.name);
      day = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"][new Date().getDay()];
      weekend = day === "sunday" || day === "saturday";
      current_date = Date.now();
      current_time = new Date().toTimeString().split(' ')[0];
      hours = [];
      sel = {};
      open = false;
      ret = {};
      if (location.multiple_hour_periods != null) {
        _ref = location.multiple_hour_periods;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          period = _ref[_i];
          if (typeof period.period_dates[0] === "string") {
            if (current_date > Date.parse(period.period_dates[0]) && current_date < Date.parse(period.period_dates[1])) {
              sel = period;
              break;
            }
          } else {
            _ref1 = period.period_dates;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              inner_period = _ref1[_j];
              if (current_date > Date.parse(inner_period[0]) && current_date < Date.parse(inner_period[1])) {
                sel = period;
                break;
              }
            }
          }
        }
      } else {
        sel = location;
      }
      if (sel["" + day + "_hours"] != null) {
        hours = sel["" + day + "_hours"];
      } else {
        hours = weekend ? sel.weekend_hours : sel.weekday_hours;
      }
      if (hours.length === 0) {
        open = false;
      } else if (typeof hours[0] === "string") {
        open = (current_time > ("" + hours[0] + ":00")) && (current_time < ("" + hours[1] + ":00"));
      } else {
        for (_k = 0, _len2 = hours.length; _k < _len2; _k++) {
          inner_hours = hours[_k];
          if ((current_time > ("" + inner_hours[0] + ":00")) && (current_time < ("" + inner_hours[1] + ":00"))) {
            open = true;
            break;
          }
        }
      }
      ret.open = open;
      if (sel.notes != null) {
        ret.notes = sel.notes;
      }
      return ret;
    };
  });

}).call(this);
